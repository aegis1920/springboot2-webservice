buildscript{
    // ext는 전역변수 설정
    ext{
        springBootVersion = '2.1.7.RELEASE'
    }
    // 의존성 라이브러리를 어떤 원격저장소에서 받을 것인지 결정
    //	- mavenCentral보다 jcenter가 더 개선된 것
    //	- 그치만 여기서는 둘 다 사용
    repositories{
        mavenCentral()
        jcenter()
    }

    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 프로젝트의 플러그인 의존성을 적용하는 코드
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.bingbong.book'
version '1.0.1-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// 의존성들을 선언하는 곳
//	- 인텔리제이는 메이븐 저장소의 데이터를 인덱싱해서 관리
//	- 특정버전을 명시하지 않아야 위에 써진 classpath의 버전을 따라간다.
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok') // Getter, Setter, 여러 생성자, toString을 자동생성해주는 어노테이션을 쓸 수 있게 해줌
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')
    compile("org.mariadb.jdbc:mariadb-java-client")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
}
